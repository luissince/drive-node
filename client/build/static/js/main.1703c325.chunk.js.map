{"version":3,"sources":["components/FormModal.js","components/forms/PathForm.js","components/Alert.js","api/api.js","components/forms/DropFilesForm.js","components/Loading.js","components/forms/FilesForm.js","components/forms/MkDirForm.js","components/Dirent.js","components/Dir.js","App.js","index.js"],"names":["FormModal","props","useState","show","setShow","handleClose","Button","disabled","success","variant","btn","size","block","onClick","title","icon","Modal","onHide","Header","closeButton","Title","Body","children","Footer","PathForm","state","processPath","path","normalPath","replace","apiPath","e","this","setState","target","value","Form","Group","controlId","Label","Control","type","className","onChange","to","Component","Alert","alert","onClose","dismissible","message","api","axios","create","baseURL","process","request","data","apiCall","get","files","post","name","absolutePath","responseType","DropFilesForm","uploading","showAlert","preventDefault","stopPropagation","preventAndStop","dataTransfer","length","response","FormData","i","append","uploadFiles","uploadTo","reload","console","log","Card","Jumbotron","style","border","onDrop","onSubmit","onDragEnter","onDragLeave","onDragOver","color","display","alignItems","justifyContent","height","Loading","Container","Spinner","animation","text","FilesForm","file","File","multiple","MkDirForm","creating","mkDir","placeholder","DirCard","iconStyle","iconSuccess","iconDanger","isDirectory","parentDirectory","Row","Col","xs","padding","Text","textOverflow","overflow","whiteSpace","cursor","removeFile","downloadFile","DirLink","link","split","slice","join","textDecoration","Dirent","lg","xl","Dir","a","rmFile","loadContent","dwFile","dir","FileDownload","loading","getContent","match","params","content","directories","key","forEach","push","map","rowProps","fillEntries","App","render","ReactDOM","document","getElementById"],"mappings":"mTAkCeA,EA7BG,SAACC,GAAW,IAAD,EACHC,oBAAS,GADN,mBACpBC,EADoB,KACdC,EADc,KAGrBC,EAAc,kBAAMD,GAAQ,IAGlC,OACE,oCACE,kBAACE,EAAA,EAAD,CAAQC,SAAUN,EAAMO,QAASC,QAASR,EAAMS,IAAKC,KAAK,KAAKC,OAAK,EAACC,QAJtD,kBAAMT,GAAQ,KAK1BH,EAAMa,MACNb,EAAMc,MAET,kBAACC,EAAA,EAAD,CAAOb,KAAMA,EAAMc,OAAQZ,GACzB,kBAACW,EAAA,EAAME,OAAP,CAAcC,aAAW,GACvB,kBAACH,EAAA,EAAMI,MAAP,KAAcnB,EAAMa,QAEtB,kBAACE,EAAA,EAAMK,KAAP,KACGpB,EAAMqB,UAET,kBAACN,EAAA,EAAMO,OAAP,KACE,kBAACjB,EAAA,EAAD,CAAQG,QAAQ,YAAYI,QAASR,GAArC,a,gBCmBKmB,E,kDAtCb,WAAYvB,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,EAAKC,YAAY,EAAKzB,MAAM0B,MAFxB,E,wDAKPA,GAIV,MAAO,CAAEC,WAHUD,EAAOA,EAAKE,QAAQ,MAAO,KAAO,GAGhCC,QAFLH,EAAOA,EAAKE,QAAQ,MAAO,MAAQ,M,+BAK5CE,GACPC,KAAKC,SAASD,KAAKN,YAAYK,EAAEG,OAAOC,U,+BAGhC,IAAD,OACP,OACE,kBAACC,EAAA,EAAD,KACE,kBAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,kBACpB,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,UAAU,OACVP,MAAOH,KAAKP,MAAMG,WAClBe,SAAU,SAACZ,GAAD,OAAO,EAAKY,SAASZ,MAEjC,kBAAC,IAAD,CAAMa,GAAE,mBAAcZ,KAAKP,MAAMK,UAC/B,kBAACxB,EAAA,EAAD,CAAQK,KAAK,KAAKF,QAAQ,UAAUgC,KAAK,UAAzC,e,GA7BWI,a,wBCQRC,EAVD,SAAC7C,GAAD,OACZ,kBAAC,IAAD,CACEQ,QAASR,EAAM8C,MAAMvC,QAAU,UAAY,SAC3CwC,QAAS/C,EAAM+C,QACfC,aAAW,GAEVhD,EAAM8C,MAAMG,U,iBC8BFC,EADH,I,WAnCV,aAAe,oBACbnB,KAAKmB,IAAMC,IAAMC,OAAO,CACtBC,QAASC,0B,6FAICC,G,0FAEIA,I,uCAAWC,M,yDAElB,qB,yLAIM9B,G,4FACFK,KAAK0B,SAAQ,kBAAM,EAAKP,IAAIQ,IAAT,mBAAyBhC,O,0NAGzCA,EAAMiC,G,4FACT5B,KAAK0B,SAAQ,kBAAM,EAAKP,IAAIU,KAAT,kBAAyBlC,GAAQiC,M,sNAGvDjC,EAAMmC,G,4FACH9B,KAAK0B,SAAQ,kBAAM,EAAKP,IAAIU,KAAT,eAAsBlC,GAAQ,CAAEmC,Y,uNAGrDnC,EAAMmC,EAAMC,G,4FACV/B,KAAK0B,SAAQ,kBAAM,EAAKP,IAAIQ,IAAT,uBAA6BhC,EAA7B,iBAA0CmC,EAA1C,yBAA+DC,O,yNAGpFpC,EAAMmC,G,4FACF9B,KAAK0B,SAAQ,kBAAM,EAAKP,IAAIQ,IAAT,yBAA+BhC,EAA/B,iBAA4CmC,GAAO,CAAEE,aAAa,Y,yJCqDzFC,E,kDAhFb,WAAYhE,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CAAEyC,WAAW,EAAOC,WAAW,EAAOpB,MAAO,IAFzC,E,2DAKJhB,GACbA,EAAEqC,iBACFrC,EAAEsC,oB,gCAGMtB,GAAQ,IAAD,OACf,GAAIf,KAAKP,MAAM0C,UACb,OACE,kBAAC,EAAD,CACEpB,MAAOA,EACPC,QAAS,kBAAM,EAAKf,SAAS,CAAEkC,WAAW,S,wEAMnCpC,G,8EACbC,KAAKsC,eAAevC,GACfA,EAAEwC,aAAaX,MAAMY,SAAUxC,KAAKP,MAAMyC,U,iDAQ7C,IALFlC,KAAKC,SAAS,CAAEiC,WAAW,IACvBO,EAAW,G,SAGPhB,EAAO,IAAIiB,SACRC,EAAI,EAAGA,EAAI5C,EAAEwC,aAAaX,MAAMY,OAAQG,IAC/ClB,EAAKmB,OAAO,OAAQ7C,EAAEwC,aAAaX,MAAMe,I,iBAE1BxB,EAAI0B,YAAY7C,KAAK/B,MAAM6E,UAAY,GAAIrB,G,QAA5DgB,E,OACAzC,KAAK/B,MAAM8E,S,kDAEXN,EAAQ,KACRO,QAAQC,IAAR,M,QAGFjD,KAAKC,SAAS,CAAEiC,WAAW,EAAOnB,MAAO0B,EAAUN,WAAW,I,gJAGtD,IAAD,OACP,OACE,oCACGnC,KAAKmC,UAAUnC,KAAKP,MAAMsB,OAExBf,KAAK/B,MAAMO,QAsBd,kBAAC0E,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK7D,KAAN,CAAWqB,UAAU,eAArB,kBAtBA,kBAACyC,EAAA,EAAD,CAAWC,MAAO,CAAEC,OAAQ,mBAAqB3C,UAAU,WAC3D,uBACE4C,OAAQ,SAACvD,GAAD,OAAO,EAAKwD,SAASxD,IAC7ByD,YAAa,SAACzD,GAAD,OAAO,EAAKuC,eAAevC,IACxC0D,YAAa,SAAC1D,GAAD,OAAO,EAAKuC,eAAevC,IACxC2D,WAAY,SAAC3D,GAAD,OAAO,EAAKuC,eAAevC,IACvCqD,MAAO,CACLO,MAAO,OACPC,QAAS,OACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,SAEVrD,UAAU,OAETV,KAAKP,MAAMyC,UACR,uBACA,qC,GApEYrB,a,gBCObmD,EATC,SAAC/F,GAAD,OACd,kBAACgG,EAAA,EAAD,CAAWvD,UAAU,uBACnB,4BAAKzC,EAAMa,OACX,kBAACoF,EAAA,EAAD,CAASC,UAAU,SAAS1F,QAAQ,UAAUiC,UAAU,WACtD,0BAAMA,UAAU,WAAWzC,EAAMmG,SC+DxBC,E,kDA/Db,WAAYpG,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CAAEmC,MAAO,GAAIM,WAAW,EAAOC,WAAW,EAAOpB,MAAO,IAFpD,E,qDAKVhB,GACPC,KAAKC,SAAS,CAAE2B,MAAO7B,EAAEG,OAAO0B,U,gCAGxBb,GAAQ,IAAD,OACf,GAAIf,KAAKP,MAAM0C,UACb,OACE,kBAAC,EAAD,CACEpB,MAAOA,EACPC,QAAS,kBAAM,EAAKf,SAAS,CAAEkC,WAAW,S,wEAMnCpC,G,+EACbA,EAAEqC,iBACFpC,KAAKC,SAAS,CAAEiC,WAAW,IACvBO,EAAW,G,SAGPhB,EAAO,IAAIiB,S,cACE1C,KAAKP,MAAMmC,O,IAA9B,2BAAW0C,EAA0B,QACnC7C,EAAKmB,OAAO,OAAQ0B,G,8CAELnD,EAAI0B,YAAY7C,KAAK/B,MAAM6E,UAAY,GAAIrB,G,OAA5DgB,E,OACAzC,KAAK/B,MAAM8E,S,kDAEXN,EAAQ,KACRO,QAAQC,IAAR,M,QAGFjD,KAAKC,SAAS,CAAEiC,WAAW,EAAOnB,MAAO0B,EAAUN,WAAW,I,gJAGtD,IAAD,OACP,OAAInC,KAAKP,MAAMyC,UACN,kBAAC,EAAD,CAASpD,MAAM,qBAAqBsF,KAAK,cAGhD,oCACGpE,KAAKmC,UAAUnC,KAAKP,MAAMsB,OAC3B,kBAACX,EAAA,EAAD,CAAMM,UAAU,OAAO6C,SAAU,SAACxD,GAAD,OAAO,EAAKwD,SAASxD,KACpD,kBAACK,EAAA,EAAKG,MAAN,oBACA,kBAACH,EAAA,EAAKmE,KAAN,CACEC,UAAQ,EACR9D,UAAU,OACVC,SAAU,SAACZ,GAAD,OAAO,EAAKY,SAASZ,MAEjC,kBAACzB,EAAA,EAAD,CAAQG,QAAQ,UAAUgC,KAAK,UAA/B,gB,GAvDcI,aCkET4D,E,kDAjEb,WAAYxG,GAAQ,IAAD,8BACjB,cAAMA,IACDwB,MAAQ,CAAEqC,KAAM,GAAI4C,UAAU,EAAOvC,WAAW,EAAOpB,MAAO,IAFlD,E,qDAKVhB,GACPC,KAAKC,SAAS,CAAE6B,KAAM/B,EAAEG,OAAOC,U,gCAGvBY,GAAQ,IAAD,OACf,GAAIf,KAAKP,MAAM0C,UACb,OACE,kBAAC,EAAD,CACEpB,MAAOA,EACPC,QAAS,kBAAM,EAAKf,SAAS,CAAEkC,WAAW,S,wEAMnCpC,G,8EACbA,EAAEqC,iBACFpC,KAAKC,SAAS,CAAEyE,UAAU,IACtBjC,EAAW,G,kBAGItB,EAAIwD,MAAM3E,KAAK/B,MAAM0B,MAAQ,GAAIK,KAAKP,MAAMqC,M,OAA7DW,E,OACAzC,KAAK/B,MAAM8E,S,kDAEXN,EAAQ,KACRO,QAAQC,IAAR,M,QAGFjD,KAAKC,SAAS,CAAEyE,UAAU,EAAOvC,WAAW,EAAMpB,MAAO0B,I,gJAGjD,IAAD,OACP,OAAIzC,KAAKP,MAAMiF,SAEX,kBAAC,EAAD,CAAS5F,MAAM,wBAAwBsF,KAAK,0BAI9C,oCACGpE,KAAKmC,UAAUnC,KAAKP,MAAMsB,OAC3B,kBAACX,EAAA,EAAD,CAAMmD,SAAU,SAACxD,GAAD,OAAO,EAAKwD,SAASxD,KACnC,kBAACK,EAAA,EAAKC,MAAN,CAAYC,UAAU,SACpB,kBAACF,EAAA,EAAKG,MAAN,aACA,kBAACH,EAAA,EAAKI,QAAN,CACEC,KAAK,OACLC,UAAU,OACVkE,YAAY,OACZzE,MAAOH,KAAKP,MAAMqC,KAClBnB,SAAU,SAACZ,GAAD,OAAO,EAAKY,SAASZ,MAEjC,kBAACzB,EAAA,EAAD,CAAQK,KAAK,KAAKF,QAAQ,UAAUgC,KAAK,UAAzC,iB,GAxDYI,a,4CCOlBgE,EAAU,SAAC5G,GACf,IAAM6G,EAAY,CAAEnB,MAAO,UAAWhF,KAAM,IACtCoG,EAAc,CAAEpB,MAAO,UAAWhF,KAAM,IACxCqG,EAAa,CAAErB,MAAO,UAAWhF,KAAM,IAEzCI,EAAO,kBAAC,IAAwB+F,GAapC,OAXI7G,EAAMgH,cACRlG,EAAO,kBAAC,IAAe+F,IAErB7G,EAAMiH,kBACRnG,EAAO,kBAAC,IAAiB+F,IAQzB,kBAAC5B,EAAA,EAAD,KACE,kBAACA,EAAA,EAAK7D,KAAN,KACE,kBAAC4E,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAKC,GAAIpH,EAAMgH,YAAc,GAAK,EAAG7B,MAAO,CAAEkC,QAAS,IACrD,kBAACpC,EAAA,EAAKqC,KAAN,CACEnC,MAAO,CACLoC,aAAc,WACdC,SAAU,SACVC,WAAY,WAGb3G,EAPH,IAOUd,EAAM6D,OAIjB7D,EAAMgH,YAAe,qCACpB,oCACE,kBAACG,EAAA,EAAD,CACEhC,MAAO,CAAEkC,QAAS,EAAGK,OAAQ,WAC7BjF,UAAU,0BACV7B,QAAS,kBAAMZ,EAAM2H,WAAW3H,EAAM0B,KAAM1B,EAAM6D,KAAM7D,EAAM8D,gBAE9D,kBAAC,IAAciD,IAEjB,kBAACI,EAAA,EAAD,CACEhC,MAAO,CAAEkC,QAAS,EAAGK,OAAQ,WAC7BjF,UAAU,0BACV7B,QAAS,kBAAMZ,EAAM4H,aAAa5H,EAAM0B,KAAM1B,EAAM6D,QAEpD,kBAAC,IAAsBiD,UAWnCe,EAAU,SAAC7H,GACf,IAAKA,EAAMgH,YACT,OAAO,oCAAGhH,EAAMqB,UAGlB,IAAIyG,EAAI,mBAAe9H,EAAM6D,MAQ7B,OAPI7D,EAAM0B,OACRoG,EAAI,UAAM9H,EAAM0B,KAAZ,aAAqB1B,EAAM6D,OAE7B7D,EAAMiH,kBACRa,EAAOA,EAAKC,MAAM,MAAMC,MAAM,GAAI,GAAGC,KAAK,OAAS,aAInD,kBAAC,IAAD,CAAMtF,GAAImF,EAAM3C,MAAO,CAAE+C,eAAgB,QAAUzF,UAAU,cAC1DzC,EAAMqB,WAmBE8G,EAdA,SAACnI,GACd,OAAKA,EAAM0B,MAAQ1B,EAAMiH,gBAChB,qCAIP,kBAACE,EAAA,EAAD,CAAKiB,GAAI,EAAGC,GAAI,EAAG5F,UAAU,QAC3B,kBAAC,EAAYzC,EACX,kBAAC,EAAYA,M,iBCoDNsI,E,kDA1Ib,WAAYtI,GAAQ,IAAD,8BACjB,cAAMA,IA8BR2H,WA/BmB,uCA+BN,WAAOjG,EAAMmC,EAAMC,GAAnB,SAAAyE,EAAA,sEACOrF,EAAIsF,OAAO9G,EAAMmC,EAAMC,GAD9B,cAEHtC,OACN,EAAKiH,cAHI,2CA/BM,4DAsCnBb,aAtCmB,uCAsCJ,WAAMlG,EAAMmC,GAAZ,eAAA0E,EAAA,sEACKrF,EAAIwF,OAAOhH,EAAMmC,GADtB,OACP8E,EADO,OAEbC,IAAaD,EAAI9E,GAFJ,2CAtCI,wDAEjB,EAAKrC,MAAQ,CACXqH,SAAS,EACTtI,SAAS,EACToI,IAAK,IALU,E,gEAUjB5G,KAAK0G,gB,+BAIL1G,KAAKC,SAAS,CAAE6G,SAAS,IACzB9G,KAAK0G,gB,6KAKevF,EAAI4F,WAAW/G,KAAK/B,MAAM+I,MAAMC,OAAOtH,MAAQ,I,QAA3DiH,E,QACEpI,QACNwB,KAAKC,SAAS,CAAE6G,SAAS,EAAOtI,SAAS,EAAMoI,QAE/C5G,KAAKC,SAAS,CAAE6G,SAAS,EAAOtI,SAAS,EAAOoI,IAAK,K,gDAGvD5G,KAAKC,SAAS,CAAE6G,SAAS,EAAOtI,SAAS,EAAOoI,IAAK,K,mJAgB1C,IAAD,OAEZ,GAAI5G,KAAKP,MAAMqH,QACb,OAAO,kBAAC,EAAD,CAAShI,MAAM,qCAGxB,GAAKkB,KAAKP,MAAMqH,SAAY9G,KAAKP,MAAMjB,QAchC,CAEL,IAAM0I,EAAUlH,KAAKP,MAAMmH,IAAIM,QACzBvH,EAAOK,KAAK/B,MAAM+I,MAAMC,OAAOtH,KAC/BoC,EAAe/B,KAAKP,MAAMmH,IAAI7E,aAE9BoF,EAAc,CAClB,kBAAC,EAAD,CACErF,KAAK,cACLsF,IAAI,SACJnC,aAAW,EACXC,iBAAe,EACfvF,KAAMA,KAGVuH,EAAQC,YAAYE,SAAQ,SAACT,GAAD,OAC1BO,EAAYG,KAAK,kBAAC,EAAD,CAAQxF,KAAM8E,EAAK3B,aAAW,EAACmC,IAAKR,EAAKjH,KAAMA,QAGlE,IAAMiC,EAAQsF,EAAQtF,MAAM2F,KAAI,SAACjD,GAAD,OAC9B,kBAAC,EAAD,CAAQxC,KAAMwC,EAAM8C,IAAK9C,EAAM3E,KAAMA,EAAMiG,WAAY,EAAKA,WAAYC,aAAc,EAAKA,aAAc9D,aAAcA,OAGzH,MAAM,GAAN,OAAWoF,EAAX,YAA2BvF,IApC3B,IAAMjC,EAAOK,KAAK/B,MAAM+I,MAAMC,OAAOtH,KAYrC,MAAM,GAAN,OAVoB,CAClB,kBAAC,EAAD,CACEmC,KAAK,cACLsF,IAAI,SACJnC,aAAW,EACXC,iBAAe,EACfvF,KAAMA,Q,+BAgCJ,IAAD,OACD6H,EAAW,CAAE9G,UAAW,gBACxBoE,EAAY,CAAEnB,MAAO,OAAQhF,KAAM,GAAI+B,UAAW,QAClDf,EAAOK,KAAK/B,MAAM+I,MAAMC,OAAOtH,KAErC,OACE,kBAACsE,EAAA,EAAD,KACE,kBAACkB,EAAA,EAAQqC,EACP,kBAACpC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAUzF,KAAMA,MAGpB,wBAAIe,UAAU,eAAd,WACA,kBAACyE,EAAA,EAAQqC,EACP,kBAACpC,EAAA,EAAD,KACE,kBAAC,EAAD,CAAe5G,SAAUwB,KAAKP,MAAMjB,QAASsE,SAAUnD,EAAMoD,OAAQ,kBAAM,EAAKA,cAGpF,kBAACoC,EAAA,EAAQqC,EACP,kBAACpC,EAAA,EAAD,KACE,kBAAC,EAAD,CACE5G,SAAUwB,KAAKP,MAAMjB,QACrBE,IAAI,UACJI,MAAM,eACNC,KAAM,kBAAC,IAAqB+F,IAE5B,kBAAC,EAAD,CAAWhC,SAAUnD,EAAMoD,OAAQ,kBAAM,EAAKA,eAIpD,kBAACoC,EAAA,EAAQqC,EACP,kBAACpC,EAAA,EAAD,KACE,kBAAC,EAAD,CACE5G,SAAUwB,KAAKP,MAAMjB,QACrBE,IAAI,UACJI,MAAM,mBACNC,KAAM,kBAAC,IAAe+F,IAEtB,kBAAC,EAAD,CAAWnF,KAAMA,EAAMoD,OAAQ,kBAAM,EAAKA,eAIhD,kBAACoC,EAAA,EAAQqC,EAAWxH,KAAKyH,oB,GArIf5G,a,OCcH6G,EAlBH,WACV,OACE,kBAAC,IAAD,KACE,kBAACzD,EAAA,EAAD,CAAWvD,UAAU,QACnB,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEf,KAAK,kBACLgI,OAAQ,SAAC1J,GAAD,OAAW,kBAAC,EAAD,eAAKmJ,IAAKnJ,EAAM+I,MAAMC,OAAOtH,MAAU1B,OAE5D,kBAAC,IAAD,CAAO0B,KAAK,KACV,kBAAC,IAAD,CAAUiB,GAAG,mB,MChBzBgH,IAASD,OAAO,kBAAC,EAAD,MAAQE,SAASC,eAAe,W","file":"static/js/main.1703c325.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\n\r\nconst FormModal = (props) => {\r\n  const [show, setShow] = useState(false);\r\n\r\n  const handleClose = () => setShow(false);\r\n  const handleShow = () => setShow(true);\r\n\r\n  return (\r\n    <>\r\n      <Button disabled={props.success} variant={props.btn} size=\"lg\" block onClick={handleShow}>\r\n        {props.title}\r\n        {props.icon}\r\n      </Button>\r\n      <Modal show={show} onHide={handleClose}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{props.title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {props.children}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleClose}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default FormModal;\r\n","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nclass PathForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = this.processPath(this.props.path);\r\n  }\r\n\r\n  processPath(path) {\r\n    const normalPath = path ? path.replace(/--/g, '/') : '';\r\n    const apiPath = path ? path.replace(/\\//g, '--') : '';\r\n\r\n    return { normalPath, apiPath };\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState(this.processPath(e.target.value));\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Form>\r\n        <Form.Group controlId=\"formBasicEmail\">\r\n          <Form.Label>Path</Form.Label>\r\n          <Form.Control\r\n            type=\"text\"\r\n            className=\"mb-2\"\r\n            value={this.state.normalPath}\r\n            onChange={(e) => this.onChange(e)}\r\n          />\r\n          <Link to={`/content/${this.state.apiPath}`}>\r\n            <Button size=\"lg\" variant=\"primary\" type=\"submit\">\r\n              Jump\r\n            </Button>\r\n          </Link>\r\n        </Form.Group>\r\n      </Form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PathForm;\r\n","import React from 'react';\r\nimport BpAlert from 'react-bootstrap/Alert';\r\n\r\nconst Alert = (props) => (\r\n  <BpAlert\r\n    variant={props.alert.success ? 'success' : 'danger'}\r\n    onClose={props.onClose}\r\n    dismissible\r\n  >\r\n    {props.alert.message}\r\n  </BpAlert>\r\n);\r\n\r\nexport default Alert;\r\n","import axios from 'axios';\r\n\r\nclass Api {\r\n  constructor() {\r\n    this.api = axios.create({\r\n      baseURL: process.env.REACT_APP_API_URL,\r\n    });\r\n  }\r\n\r\n  async apiCall(request) {\r\n    try {\r\n      return (await request()).data;\r\n    } catch (error) {\r\n      return \"error conexión\";\r\n    }\r\n  }\r\n\r\n  async getContent(path) {\r\n    return await this.apiCall(() => this.api.get(`/content/${path}`));\r\n  }\r\n\r\n  async uploadFiles(path, files) {\r\n    return await this.apiCall(() => this.api.post(`/upload/${path}`, files));\r\n  }\r\n\r\n  async mkDir(path, name) {\r\n    return await this.apiCall(() => this.api.post(`/dir/${path}`, { name }));\r\n  }\r\n\r\n  async rmFile(path, name, absolutePath){\r\n    return await this.apiCall(() => this.api.get(`/remove?path=${path}&name=${name}&absolutePath=${absolutePath}`));\r\n  }\r\n\r\n  async dwFile(path, name){\r\n      return await this.apiCall(() => this.api.get(`/download?path=${path}&name=${name}`,{ responseType:\"blob\"}));\r\n  }\r\n}\r\n\r\nconst api = new Api();\r\nexport default api;\r\n","import React, { Component } from 'react';\r\nimport Jumbotron from 'react-bootstrap/Jumbotron';\r\nimport Card from 'react-bootstrap/Card';\r\nimport Alert from '../Alert';\r\nimport api from '../../api/api';\r\n\r\nclass DropFilesForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { uploading: false, showAlert: false, alert: {} };\r\n  }\r\n\r\n  preventAndStop(e) {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n  }\r\n\r\n  showAlert(alert) {\r\n    if (this.state.showAlert) {\r\n      return (\r\n        <Alert\r\n          alert={alert}\r\n          onClose={() => this.setState({ showAlert: false })}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  async onSubmit(e) {\r\n    this.preventAndStop(e);\r\n    if (!e.dataTransfer.files.length || this.state.uploading) {\r\n      return\r\n    };\r\n    this.setState({ uploading: true });\r\n    let response = {};\r\n\r\n    try {\r\n      const data = new FormData();\r\n      for (let i = 0; i < e.dataTransfer.files.length; i++) {\r\n        data.append('file', e.dataTransfer.files[i]);\r\n      }\r\n      response = await api.uploadFiles(this.props.uploadTo || '', data);\r\n      this.props.reload();\r\n    } catch (e) {\r\n      response = e;\r\n      console.log(e);\r\n    }\r\n\r\n    this.setState({ uploading: false, alert: response, showAlert: true });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.showAlert(this.state.alert)}\r\n        {\r\n          !this.props.success?\r\n          <Jumbotron style={{ border: '2px dashed #aaa' }} className=\"m-0 p-0\">\r\n          <p\r\n            onDrop={(e) => this.onSubmit(e)}\r\n            onDragEnter={(e) => this.preventAndStop(e)}\r\n            onDragLeave={(e) => this.preventAndStop(e)}\r\n            onDragOver={(e) => this.preventAndStop(e)}\r\n            style={{\r\n              color: '#777',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              justifyContent: 'center',\r\n              height: '120px',\r\n            }}\r\n            className=\"m-0\"\r\n          >\r\n            {this.state.uploading\r\n              ? 'Uploading file(s)...'\r\n              : 'Drop File(s) Here to Upload'}\r\n          </p>\r\n        </Jumbotron>\r\n        :\r\n        <Card>\r\n          <Card.Body className=\"text-center\">No directory.</Card.Body>\r\n        </Card>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DropFilesForm;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Spinner from 'react-bootstrap/Spinner';\r\n\r\nconst Loading = (props) => (\r\n  <Container className=\"text-center mx-auto\">\r\n    <h5>{props.title}</h5>\r\n    <Spinner animation=\"border\" variant=\"primary\" className=\"mx-auto\">\r\n      <span className=\"sr-only\">{props.text}</span>\r\n    </Spinner>\r\n  </Container>\r\n);\r\n\r\nexport default Loading;\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Loading from '../Loading';\r\nimport Alert from '../Alert';\r\nimport api from '../../api/api';\r\n\r\nclass FilesForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { files: [], uploading: false, showAlert: false, alert: {} };\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ files: e.target.files });\r\n  }\r\n\r\n  showAlert(alert) {\r\n    if (this.state.showAlert) {\r\n      return (\r\n        <Alert\r\n          alert={alert}\r\n          onClose={() => this.setState({ showAlert: false })}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  async onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ uploading: true });\r\n    let response = {};\r\n\r\n    try {\r\n      const data = new FormData();\r\n      for (const file of this.state.files) {\r\n        data.append('file', file);\r\n      }\r\n      response = await api.uploadFiles(this.props.uploadTo || '', data);\r\n      this.props.reload();\r\n    } catch (e) {\r\n      response = e;\r\n      console.log(e);\r\n    }\r\n\r\n    this.setState({ uploading: false, alert: response, showAlert: true });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.uploading) {\r\n      return <Loading title=\"Uploading files...\" text=\"Uploading\" />;\r\n    }\r\n    return (\r\n      <>\r\n        {this.showAlert(this.state.alert)}\r\n        <Form className=\"mb-3\" onSubmit={(e) => this.onSubmit(e)}>\r\n          <Form.Label>Upload File</Form.Label>\r\n          <Form.File\r\n            multiple\r\n            className=\"mb-2\"\r\n            onChange={(e) => this.onChange(e)}\r\n          />\r\n          <Button variant=\"primary\" type=\"submit\">\r\n            Upload\r\n          </Button>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FilesForm;\r\n","import React, { Component } from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport Button from 'react-bootstrap/Button';\r\nimport Loading from '../Loading';\r\nimport Alert from '../Alert';\r\nimport api from '../../api/api';\r\n\r\nclass MkDirForm extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '', creating: false, showAlert: false, alert: {} };\r\n  }\r\n\r\n  onChange(e) {\r\n    this.setState({ name: e.target.value });\r\n  }\r\n\r\n  showAlert(alert) {\r\n    if (this.state.showAlert) {\r\n      return (\r\n        <Alert\r\n          alert={alert}\r\n          onClose={() => this.setState({ showAlert: false })}\r\n        />\r\n      );\r\n    }\r\n  }\r\n\r\n  async onSubmit(e) {\r\n    e.preventDefault();\r\n    this.setState({ creating: true });\r\n    let response = {};\r\n    \r\n    try {\r\n      response = await api.mkDir(this.props.path || '', this.state.name);\r\n      this.props.reload();\r\n    } catch (e) {\r\n      response = e;\r\n      console.log(e);\r\n    }\r\n\r\n    this.setState({ creating: false, showAlert: true, alert: response });\r\n  }\r\n\r\n  render() {\r\n    if (this.state.creating) {\r\n      return (\r\n        <Loading title=\"Creating directory...\" text=\"Creating directory...\" />\r\n      );\r\n    }\r\n    return (\r\n      <>\r\n        {this.showAlert(this.state.alert)}\r\n        <Form onSubmit={(e) => this.onSubmit(e)}>\r\n          <Form.Group controlId=\"mkdir\">\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              className=\"mb-2\"\r\n              placeholder=\"Name\"\r\n              value={this.state.name}\r\n              onChange={(e) => this.onChange(e)}\r\n            />\r\n            <Button size=\"lg\" variant=\"success\" type=\"submit\">\r\n              Create\r\n            </Button>\r\n          </Form.Group>\r\n        </Form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MkDirForm;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport Card from 'react-bootstrap/Card';\r\nimport {\r\n  FolderFill,\r\n  FileEarmarkTextFill,\r\n  Arrow90degUp,\r\n  FileArrowDownFill,\r\n  TrashFill\r\n} from 'react-bootstrap-icons';\r\n\r\nconst DirCard = (props) => {\r\n  const iconStyle = { color: '#61AFEF', size: 30 };\r\n  const iconSuccess = { color: '#0d9f39', size: 30 };\r\n  const iconDanger = { color: '#dc3545', size: 30 };\r\n\r\n  let icon = <FileEarmarkTextFill {...iconStyle} />;\r\n\r\n  if (props.isDirectory) {\r\n    icon = <FolderFill {...iconStyle} />;\r\n  }\r\n  if (props.parentDirectory) {\r\n    icon = <Arrow90degUp {...iconStyle} />;\r\n  }\r\n\r\n  // const path = props.path ? `${props.path}--${props.name}` : props.name;\r\n  // const downloadLink = `${process.env.REACT_APP_API_URL}/download/${path}`;\r\n\r\n  // TODO: Edit and delete files\r\n  return (\r\n    <Card>\r\n      <Card.Body>\r\n        <Container>\r\n          <Row>\r\n            <Col xs={props.isDirectory ? '' : 8} style={{ padding: 0 }}>\r\n              <Card.Text\r\n                style={{\r\n                  textOverflow: 'ellipsis',\r\n                  overflow: 'hidden',\r\n                  whiteSpace: 'nowrap',\r\n                }}\r\n              >\r\n                {icon} {props.name}\r\n              </Card.Text>\r\n            </Col>\r\n            \r\n            {props.isDirectory ? (<></>) : (\r\n              <>           \r\n                <Col\r\n                  style={{ padding: 0, cursor: 'pointer' }}\r\n                  className=\"d-flex flex-row-reverse\"\r\n                  onClick={() => props.removeFile(props.path, props.name, props.absolutePath)}\r\n                >\r\n                  <TrashFill {...iconDanger} />\r\n                </Col>\r\n                <Col\r\n                  style={{ padding: 0, cursor: 'pointer' }}\r\n                  className=\"d-flex flex-row-reverse\"\r\n                  onClick={() => props.downloadFile(props.path, props.name)}\r\n                >\r\n                  <FileArrowDownFill {...iconSuccess} />\r\n                </Col>\r\n              </>\r\n            )}\r\n          </Row>\r\n        </Container>\r\n      </Card.Body>\r\n    </Card>\r\n  );\r\n};\r\n\r\nconst DirLink = (props) => {\r\n  if (!props.isDirectory) {\r\n    return <>{props.children}</>;\r\n  }\r\n\r\n  let link = `/content/${props.name}`;\r\n  if (props.path) {\r\n    link = `${props.path}--${props.name}`;\r\n  }\r\n  if (props.parentDirectory) {\r\n    link = link.split('--').slice(0, -2).join('--') || '/content/';\r\n  }\r\n\r\n  return (\r\n    <Link to={link} style={{ textDecoration: 'none' }} className=\"text-light\">\r\n      {props.children}\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Dirent = (props) => {\r\n  if (!props.path && props.parentDirectory) {\r\n    return <></>;\r\n  }\r\n\r\n  return (\r\n    <Col lg={4} xl={3} className=\"mt-2\">\r\n      <DirLink {...props}>\r\n        <DirCard {...props} />\r\n      </DirLink>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Dirent;\r\n","import React, { Component } from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Row from 'react-bootstrap/Row';\r\nimport Col from 'react-bootstrap/Col';\r\nimport { CloudArrowUpFill, FolderPlus } from 'react-bootstrap-icons';\r\nimport FormModal from './FormModal';\r\nimport PathForm from './forms/PathForm';\r\nimport DropFilesForm from './forms/DropFilesForm';\r\nimport FilesForm from './forms/FilesForm';\r\nimport MkDirForm from './forms/MkDirForm';\r\nimport Dirent from './Dirent';\r\nimport api from '../api/api';\r\nimport Loading from './Loading';\r\nimport FileDownload from 'js-file-download';\r\n\r\nclass Dir extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: true,\r\n      success: false,\r\n      dir: {},\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.loadContent();\r\n  }\r\n\r\n  reload() {\r\n    this.setState({ loading: true });\r\n    this.loadContent();\r\n  }\r\n\r\n  async loadContent() {\r\n    try {\r\n      const dir = await api.getContent(this.props.match.params.path || '');\r\n      if (dir.success) {\r\n        this.setState({ loading: false, success: true, dir });\r\n      } else {\r\n        this.setState({ loading: false, success: false, dir: {} });\r\n      }\r\n    } catch (e) {\r\n      this.setState({ loading: false, success: false, dir: {} });\r\n    }\r\n  }\r\n\r\n  removeFile = async (path, name, absolutePath) => {\r\n    const dir = await api.rmFile(path, name, absolutePath);\r\n    if (dir.state) {\r\n      this.loadContent();\r\n    }\r\n  }\r\n\r\n  downloadFile = async(path, name)=>{\r\n    const dir = await api.dwFile(path, name);\r\n    FileDownload(dir,name);\r\n  }\r\n\r\n  fillEntries() {\r\n\r\n    if (this.state.loading) {\r\n      return <Loading title=\"Loading Files and Directories...\" />;\r\n    }\r\n\r\n    if (!this.state.loading && !this.state.success) {\r\n      const path = this.props.match.params.path;\r\n\r\n      const directories = [\r\n        <Dirent\r\n          name=\"Up a dir...\"\r\n          key=\"parent\"\r\n          isDirectory\r\n          parentDirectory\r\n          path={path}\r\n        />,\r\n      ];\r\n\r\n      return [...directories];\r\n    } else {\r\n\r\n      const content = this.state.dir.content;\r\n      const path = this.props.match.params.path;\r\n      const absolutePath = this.state.dir.absolutePath;\r\n\r\n      const directories = [\r\n        <Dirent\r\n          name=\"Up a dir...\"\r\n          key=\"parent\"\r\n          isDirectory\r\n          parentDirectory\r\n          path={path}\r\n        />,\r\n      ];\r\n      content.directories.forEach((dir) =>\r\n        directories.push(<Dirent name={dir} isDirectory key={dir} path={path} />)\r\n      );\r\n\r\n      const files = content.files.map((file) => (\r\n        <Dirent name={file} key={file} path={path} removeFile={this.removeFile} downloadFile={this.downloadFile} absolutePath={absolutePath} />\r\n      ));\r\n\r\n      return [...directories, ...files];\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const rowProps = { className: 'mx-auto mb-3' };\r\n    const iconStyle = { color: '#FFF', size: 24, className: 'ml-2' };\r\n    const path = this.props.match.params.path;\r\n\r\n    return (\r\n      <Container>\r\n        <Row {...rowProps}>\r\n          <Col>\r\n            <PathForm path={path} />\r\n          </Col>\r\n        </Row>\r\n        <h1 className=\"text-center\">Content</h1>\r\n        <Row {...rowProps}>\r\n          <Col>\r\n            <DropFilesForm success={!this.state.success} uploadTo={path} reload={() => this.reload()} />\r\n          </Col>\r\n        </Row>\r\n        <Row {...rowProps}>\r\n          <Col>\r\n            <FormModal\r\n              success={!this.state.success}\r\n              btn=\"primary\"\r\n              title=\"Upload Files\"\r\n              icon={<CloudArrowUpFill {...iconStyle} />}\r\n            >\r\n              <FilesForm uploadTo={path} reload={() => this.reload()} />\r\n            </FormModal>\r\n          </Col>\r\n        </Row>\r\n        <Row {...rowProps}>\r\n          <Col>\r\n            <FormModal\r\n              success={!this.state.success}\r\n              btn=\"success\"\r\n              title=\"Create Directory\"\r\n              icon={<FolderPlus {...iconStyle} />}\r\n            >\r\n              <MkDirForm path={path} reload={() => this.reload()} />\r\n            </FormModal>\r\n          </Col>\r\n        </Row>\r\n        <Row {...rowProps}>{this.fillEntries()}</Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dir;\r\n","import React from 'react';\r\nimport Container from 'react-bootstrap/Container';\r\nimport Dir from './components/Dir';\r\n// import Login from './components/Login';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nconst App = () => {\r\n  return (\r\n    <Router>\r\n      <Container className=\"mt-3\">\r\n        <Switch>\r\n          <Route\r\n            path=\"/content/:path?\"\r\n            render={(props) => <Dir key={props.match.params.path} {...props} />}\r\n          />\r\n          <Route path=\"/\">\r\n            <Redirect to=\"/content/\" />\r\n          </Route>\r\n        </Switch>\r\n      </Container>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport \"bootswatch/dist/darkly/bootstrap.min.css\";\r\n\r\nReactDOM.render(<App />,document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}